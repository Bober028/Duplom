// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—à–∏–∫–æ–º
function getCart() {
    const cart = localStorage.getItem("cart");
    return cart ? JSON.parse(cart) : [];
}

function saveCart(cart) {
    localStorage.setItem("cart", JSON.stringify(cart));
}

function addToCart(phone) {
    const cart = getCart();
    cart.push(phone);
    saveCart(cart);
    updateCartCount();
    alert("–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!");
}

function removeFromCart(phoneName) {
    const cart = getCart();
    const updatedCart = cart.filter(item => item.name !== phoneName);
    saveCart(updatedCart);
    displayCart();
    updateCartCount();
}

function displayCart() {
    const cartItems = document.getElementById("cartItems");
    const totalPrice = document.getElementById("totalPrice");
    const cart = getCart();
    
    if (!cartItems) return; // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ—à–∏–∫–∞
    
    if (cart.length === 0) {
        cartItems.innerHTML = "<p>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>";
        totalPrice.textContent = "0";
        return;
    }

    cartItems.innerHTML = cart.map(item => `
        <div class="cart-item">
            <div class="cart-item-info">
                <div class="cart-item-title">${item.name}</div>
                <div class="cart-item-price">${item.price} –≥—Ä–Ω</div>
            </div>
            <div class="cart-item-actions">
                <button class="remove-from-cart" onclick="removeFromCart('${item.name}')">
                    –í–∏–¥–∞–ª–∏—Ç–∏
                </button>
            </div>
        </div>
    `).join("");

    const total = cart.reduce((sum, item) => sum + item.price, 0);
    totalPrice.textContent = total;
}

function updateCartCount() {
    const cart = getCart();
    const cartButton = document.querySelector(".cart-button");
    if (cartButton) {
        const count = cart.length;
        cartButton.innerHTML = count > 0 ? `üõí –ö–æ—à–∏–∫ (${count})` : "üõí –ö–æ—à–∏–∫";
    }
}

function checkout() {
    const cart = getCart();
    if (cart.length === 0) {
        alert('–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!');
        return;
    }

    const currentUser = JSON.parse(localStorage.getItem('currentUser'));
    if (!currentUser) {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!');
        return;
    }

    if (confirm('–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?')) {
        alert('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ! –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!');
        saveCart([]); // –û—á–∏—â–∞—î–º–æ –∫–æ—à–∏–∫
        displayCart();
        updateCartCount();
    }
}

// –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.addEventListener('load', function() {
    displayCart();
    updateCartCount();
}); 